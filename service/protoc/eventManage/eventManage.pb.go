// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eventManage.proto

package eventManage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventIdReq struct {
	EventId              int64    `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventIdReq) Reset()         { *m = EventIdReq{} }
func (m *EventIdReq) String() string { return proto.CompactTextString(m) }
func (*EventIdReq) ProtoMessage()    {}
func (*EventIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4314db4f6a3e016f, []int{0}
}

func (m *EventIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventIdReq.Unmarshal(m, b)
}
func (m *EventIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventIdReq.Marshal(b, m, deterministic)
}
func (m *EventIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventIdReq.Merge(m, src)
}
func (m *EventIdReq) XXX_Size() int {
	return xxx_messageInfo_EventIdReq.Size(m)
}
func (m *EventIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EventIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_EventIdReq proto.InternalMessageInfo

func (m *EventIdReq) GetEventId() int64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

type EventDetailMesssage struct {
	EventId              int64    `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	EventTitle           string   `protobuf:"bytes,2,opt,name=eventTitle,proto3" json:"eventTitle,omitempty"`
	EventType            string   `protobuf:"bytes,3,opt,name=eventType,proto3" json:"eventType,omitempty"`
	EventDescription     string   `protobuf:"bytes,4,opt,name=eventDescription,proto3" json:"eventDescription,omitempty"`
	ParticipantNum       int32    `protobuf:"varint,5,opt,name=participantNum,proto3" json:"participantNum,omitempty"`
	StartTime            string   `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              string   `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
	AnswerDay            string   `protobuf:"bytes,8,opt,name=answerDay,proto3" json:"answerDay,omitempty"`
	SingleScore          float64  `protobuf:"fixed64,9,opt,name=singleScore,proto3" json:"singleScore,omitempty"`
	FillScore            float64  `protobuf:"fixed64,10,opt,name=fillScore,proto3" json:"fillScore,omitempty"`
	JudgeScore           float64  `protobuf:"fixed64,11,opt,name=judgeScore,proto3" json:"judgeScore,omitempty"`
	MultipleScore        float64  `protobuf:"fixed64,12,opt,name=multipleScore,proto3" json:"multipleScore,omitempty"`
	TeamScore            float64  `protobuf:"fixed64,13,opt,name=teamScore,proto3" json:"teamScore,omitempty"`
	TeamScoreUp          float64  `protobuf:"fixed64,14,opt,name=teamScoreUp,proto3" json:"teamScoreUp,omitempty"`
	PersonScore          float64  `protobuf:"fixed64,15,opt,name=personScore,proto3" json:"personScore,omitempty"`
	PersonScoreUp        float64  `protobuf:"fixed64,16,opt,name=personScoreUp,proto3" json:"personScoreUp,omitempty"`
	Single               string   `protobuf:"bytes,17,opt,name=single,proto3" json:"single,omitempty"`
	Fill                 string   `protobuf:"bytes,18,opt,name=fill,proto3" json:"fill,omitempty"`
	Judge                string   `protobuf:"bytes,19,opt,name=judge,proto3" json:"judge,omitempty"`
	Multiple             string   `protobuf:"bytes,20,opt,name=multiple,proto3" json:"multiple,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventDetailMesssage) Reset()         { *m = EventDetailMesssage{} }
func (m *EventDetailMesssage) String() string { return proto.CompactTextString(m) }
func (*EventDetailMesssage) ProtoMessage()    {}
func (*EventDetailMesssage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4314db4f6a3e016f, []int{1}
}

func (m *EventDetailMesssage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventDetailMesssage.Unmarshal(m, b)
}
func (m *EventDetailMesssage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventDetailMesssage.Marshal(b, m, deterministic)
}
func (m *EventDetailMesssage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventDetailMesssage.Merge(m, src)
}
func (m *EventDetailMesssage) XXX_Size() int {
	return xxx_messageInfo_EventDetailMesssage.Size(m)
}
func (m *EventDetailMesssage) XXX_DiscardUnknown() {
	xxx_messageInfo_EventDetailMesssage.DiscardUnknown(m)
}

var xxx_messageInfo_EventDetailMesssage proto.InternalMessageInfo

func (m *EventDetailMesssage) GetEventId() int64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *EventDetailMesssage) GetEventTitle() string {
	if m != nil {
		return m.EventTitle
	}
	return ""
}

func (m *EventDetailMesssage) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *EventDetailMesssage) GetEventDescription() string {
	if m != nil {
		return m.EventDescription
	}
	return ""
}

func (m *EventDetailMesssage) GetParticipantNum() int32 {
	if m != nil {
		return m.ParticipantNum
	}
	return 0
}

func (m *EventDetailMesssage) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *EventDetailMesssage) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *EventDetailMesssage) GetAnswerDay() string {
	if m != nil {
		return m.AnswerDay
	}
	return ""
}

func (m *EventDetailMesssage) GetSingleScore() float64 {
	if m != nil {
		return m.SingleScore
	}
	return 0
}

func (m *EventDetailMesssage) GetFillScore() float64 {
	if m != nil {
		return m.FillScore
	}
	return 0
}

func (m *EventDetailMesssage) GetJudgeScore() float64 {
	if m != nil {
		return m.JudgeScore
	}
	return 0
}

func (m *EventDetailMesssage) GetMultipleScore() float64 {
	if m != nil {
		return m.MultipleScore
	}
	return 0
}

func (m *EventDetailMesssage) GetTeamScore() float64 {
	if m != nil {
		return m.TeamScore
	}
	return 0
}

func (m *EventDetailMesssage) GetTeamScoreUp() float64 {
	if m != nil {
		return m.TeamScoreUp
	}
	return 0
}

func (m *EventDetailMesssage) GetPersonScore() float64 {
	if m != nil {
		return m.PersonScore
	}
	return 0
}

func (m *EventDetailMesssage) GetPersonScoreUp() float64 {
	if m != nil {
		return m.PersonScoreUp
	}
	return 0
}

func (m *EventDetailMesssage) GetSingle() string {
	if m != nil {
		return m.Single
	}
	return ""
}

func (m *EventDetailMesssage) GetFill() string {
	if m != nil {
		return m.Fill
	}
	return ""
}

func (m *EventDetailMesssage) GetJudge() string {
	if m != nil {
		return m.Judge
	}
	return ""
}

func (m *EventDetailMesssage) GetMultiple() string {
	if m != nil {
		return m.Multiple
	}
	return ""
}

type EventShowMesssage struct {
	EventId              int64    `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	EventTitle           string   `protobuf:"bytes,2,opt,name=eventTitle,proto3" json:"eventTitle,omitempty"`
	EventDescription     string   `protobuf:"bytes,3,opt,name=eventDescription,proto3" json:"eventDescription,omitempty"`
	ParticipantNum       int32    `protobuf:"varint,4,opt,name=participantNum,proto3" json:"participantNum,omitempty"`
	StartTime            string   `protobuf:"bytes,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              string   `protobuf:"bytes,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Single               string   `protobuf:"bytes,7,opt,name=single,proto3" json:"single,omitempty"`
	Fill                 string   `protobuf:"bytes,8,opt,name=fill,proto3" json:"fill,omitempty"`
	Judge                string   `protobuf:"bytes,9,opt,name=judge,proto3" json:"judge,omitempty"`
	Multiple             string   `protobuf:"bytes,10,opt,name=multiple,proto3" json:"multiple,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventShowMesssage) Reset()         { *m = EventShowMesssage{} }
func (m *EventShowMesssage) String() string { return proto.CompactTextString(m) }
func (*EventShowMesssage) ProtoMessage()    {}
func (*EventShowMesssage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4314db4f6a3e016f, []int{2}
}

func (m *EventShowMesssage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventShowMesssage.Unmarshal(m, b)
}
func (m *EventShowMesssage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventShowMesssage.Marshal(b, m, deterministic)
}
func (m *EventShowMesssage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventShowMesssage.Merge(m, src)
}
func (m *EventShowMesssage) XXX_Size() int {
	return xxx_messageInfo_EventShowMesssage.Size(m)
}
func (m *EventShowMesssage) XXX_DiscardUnknown() {
	xxx_messageInfo_EventShowMesssage.DiscardUnknown(m)
}

var xxx_messageInfo_EventShowMesssage proto.InternalMessageInfo

func (m *EventShowMesssage) GetEventId() int64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *EventShowMesssage) GetEventTitle() string {
	if m != nil {
		return m.EventTitle
	}
	return ""
}

func (m *EventShowMesssage) GetEventDescription() string {
	if m != nil {
		return m.EventDescription
	}
	return ""
}

func (m *EventShowMesssage) GetParticipantNum() int32 {
	if m != nil {
		return m.ParticipantNum
	}
	return 0
}

func (m *EventShowMesssage) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *EventShowMesssage) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *EventShowMesssage) GetSingle() string {
	if m != nil {
		return m.Single
	}
	return ""
}

func (m *EventShowMesssage) GetFill() string {
	if m != nil {
		return m.Fill
	}
	return ""
}

func (m *EventShowMesssage) GetJudge() string {
	if m != nil {
		return m.Judge
	}
	return ""
}

func (m *EventShowMesssage) GetMultiple() string {
	if m != nil {
		return m.Multiple
	}
	return ""
}

type GetEventListReq struct {
	Offset               int32    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	ManageId             int64    `protobuf:"varint,3,opt,name=manageId,proto3" json:"manageId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventListReq) Reset()         { *m = GetEventListReq{} }
func (m *GetEventListReq) String() string { return proto.CompactTextString(m) }
func (*GetEventListReq) ProtoMessage()    {}
func (*GetEventListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4314db4f6a3e016f, []int{3}
}

func (m *GetEventListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventListReq.Unmarshal(m, b)
}
func (m *GetEventListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventListReq.Marshal(b, m, deterministic)
}
func (m *GetEventListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventListReq.Merge(m, src)
}
func (m *GetEventListReq) XXX_Size() int {
	return xxx_messageInfo_GetEventListReq.Size(m)
}
func (m *GetEventListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventListReq proto.InternalMessageInfo

func (m *GetEventListReq) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetEventListReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetEventListReq) GetManageId() int64 {
	if m != nil {
		return m.ManageId
	}
	return 0
}

type EventMesssage struct {
	EventId              int64    `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	EventTitle           string   `protobuf:"bytes,2,opt,name=eventTitle,proto3" json:"eventTitle,omitempty"`
	EventDescription     string   `protobuf:"bytes,3,opt,name=eventDescription,proto3" json:"eventDescription,omitempty"`
	EventType            string   `protobuf:"bytes,4,opt,name=eventType,proto3" json:"eventType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventMesssage) Reset()         { *m = EventMesssage{} }
func (m *EventMesssage) String() string { return proto.CompactTextString(m) }
func (*EventMesssage) ProtoMessage()    {}
func (*EventMesssage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4314db4f6a3e016f, []int{4}
}

func (m *EventMesssage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventMesssage.Unmarshal(m, b)
}
func (m *EventMesssage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventMesssage.Marshal(b, m, deterministic)
}
func (m *EventMesssage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventMesssage.Merge(m, src)
}
func (m *EventMesssage) XXX_Size() int {
	return xxx_messageInfo_EventMesssage.Size(m)
}
func (m *EventMesssage) XXX_DiscardUnknown() {
	xxx_messageInfo_EventMesssage.DiscardUnknown(m)
}

var xxx_messageInfo_EventMesssage proto.InternalMessageInfo

func (m *EventMesssage) GetEventId() int64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *EventMesssage) GetEventTitle() string {
	if m != nil {
		return m.EventTitle
	}
	return ""
}

func (m *EventMesssage) GetEventDescription() string {
	if m != nil {
		return m.EventDescription
	}
	return ""
}

func (m *EventMesssage) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

type EventListRsp struct {
	EventList            []*EventMesssage `protobuf:"bytes,1,rep,name=eventList,proto3" json:"eventList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EventListRsp) Reset()         { *m = EventListRsp{} }
func (m *EventListRsp) String() string { return proto.CompactTextString(m) }
func (*EventListRsp) ProtoMessage()    {}
func (*EventListRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4314db4f6a3e016f, []int{5}
}

func (m *EventListRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventListRsp.Unmarshal(m, b)
}
func (m *EventListRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventListRsp.Marshal(b, m, deterministic)
}
func (m *EventListRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventListRsp.Merge(m, src)
}
func (m *EventListRsp) XXX_Size() int {
	return xxx_messageInfo_EventListRsp.Size(m)
}
func (m *EventListRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_EventListRsp.DiscardUnknown(m)
}

var xxx_messageInfo_EventListRsp proto.InternalMessageInfo

func (m *EventListRsp) GetEventList() []*EventMesssage {
	if m != nil {
		return m.EventList
	}
	return nil
}

type AddEventReq struct {
	ManageId             int64    `protobuf:"varint,1,opt,name=manageId,proto3" json:"manageId,omitempty"`
	EventTitle           string   `protobuf:"bytes,2,opt,name=eventTitle,proto3" json:"eventTitle,omitempty"`
	EventDescription     string   `protobuf:"bytes,3,opt,name=eventDescription,proto3" json:"eventDescription,omitempty"`
	EventTime            string   `protobuf:"bytes,4,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	EventNum             string   `protobuf:"bytes,5,opt,name=eventNum,proto3" json:"eventNum,omitempty"`
	EventType            string   `protobuf:"bytes,6,opt,name=eventType,proto3" json:"eventType,omitempty"`
	ProblemRandom        bool     `protobuf:"varint,7,opt,name=problemRandom,proto3" json:"problemRandom,omitempty"`
	OptionRandom         bool     `protobuf:"varint,8,opt,name=optionRandom,proto3" json:"optionRandom,omitempty"`
	AnswerTime           string   `protobuf:"bytes,9,opt,name=answerTime,proto3" json:"answerTime,omitempty"`
	CreditRule           string   `protobuf:"bytes,10,opt,name=creditRule,proto3" json:"creditRule,omitempty"`
	ParticipantNum       int32    `protobuf:"varint,11,opt,name=participantNum,proto3" json:"participantNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEventReq) Reset()         { *m = AddEventReq{} }
func (m *AddEventReq) String() string { return proto.CompactTextString(m) }
func (*AddEventReq) ProtoMessage()    {}
func (*AddEventReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4314db4f6a3e016f, []int{6}
}

func (m *AddEventReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEventReq.Unmarshal(m, b)
}
func (m *AddEventReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEventReq.Marshal(b, m, deterministic)
}
func (m *AddEventReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEventReq.Merge(m, src)
}
func (m *AddEventReq) XXX_Size() int {
	return xxx_messageInfo_AddEventReq.Size(m)
}
func (m *AddEventReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEventReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddEventReq proto.InternalMessageInfo

func (m *AddEventReq) GetManageId() int64 {
	if m != nil {
		return m.ManageId
	}
	return 0
}

func (m *AddEventReq) GetEventTitle() string {
	if m != nil {
		return m.EventTitle
	}
	return ""
}

func (m *AddEventReq) GetEventDescription() string {
	if m != nil {
		return m.EventDescription
	}
	return ""
}

func (m *AddEventReq) GetEventTime() string {
	if m != nil {
		return m.EventTime
	}
	return ""
}

func (m *AddEventReq) GetEventNum() string {
	if m != nil {
		return m.EventNum
	}
	return ""
}

func (m *AddEventReq) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *AddEventReq) GetProblemRandom() bool {
	if m != nil {
		return m.ProblemRandom
	}
	return false
}

func (m *AddEventReq) GetOptionRandom() bool {
	if m != nil {
		return m.OptionRandom
	}
	return false
}

func (m *AddEventReq) GetAnswerTime() string {
	if m != nil {
		return m.AnswerTime
	}
	return ""
}

func (m *AddEventReq) GetCreditRule() string {
	if m != nil {
		return m.CreditRule
	}
	return ""
}

func (m *AddEventReq) GetParticipantNum() int32 {
	if m != nil {
		return m.ParticipantNum
	}
	return 0
}

type AddEventRsp struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	EventId              int64    `protobuf:"varint,2,opt,name=eventId,proto3" json:"eventId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEventRsp) Reset()         { *m = AddEventRsp{} }
func (m *AddEventRsp) String() string { return proto.CompactTextString(m) }
func (*AddEventRsp) ProtoMessage()    {}
func (*AddEventRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4314db4f6a3e016f, []int{7}
}

func (m *AddEventRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEventRsp.Unmarshal(m, b)
}
func (m *AddEventRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEventRsp.Marshal(b, m, deterministic)
}
func (m *AddEventRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEventRsp.Merge(m, src)
}
func (m *AddEventRsp) XXX_Size() int {
	return xxx_messageInfo_AddEventRsp.Size(m)
}
func (m *AddEventRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEventRsp.DiscardUnknown(m)
}

var xxx_messageInfo_AddEventRsp proto.InternalMessageInfo

func (m *AddEventRsp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddEventRsp) GetEventId() int64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

type EventTime struct {
	StartTime            string   `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              string   `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	AnswerDay            string   `protobuf:"bytes,3,opt,name=answerDay,proto3" json:"answerDay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventTime) Reset()         { *m = EventTime{} }
func (m *EventTime) String() string { return proto.CompactTextString(m) }
func (*EventTime) ProtoMessage()    {}
func (*EventTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_4314db4f6a3e016f, []int{8}
}

func (m *EventTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventTime.Unmarshal(m, b)
}
func (m *EventTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventTime.Marshal(b, m, deterministic)
}
func (m *EventTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventTime.Merge(m, src)
}
func (m *EventTime) XXX_Size() int {
	return xxx_messageInfo_EventTime.Size(m)
}
func (m *EventTime) XXX_DiscardUnknown() {
	xxx_messageInfo_EventTime.DiscardUnknown(m)
}

var xxx_messageInfo_EventTime proto.InternalMessageInfo

func (m *EventTime) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *EventTime) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *EventTime) GetAnswerDay() string {
	if m != nil {
		return m.AnswerDay
	}
	return ""
}

type ProblemNum struct {
	Single               int32    `protobuf:"varint,1,opt,name=single,proto3" json:"single,omitempty"`
	Multiple             int32    `protobuf:"varint,2,opt,name=multiple,proto3" json:"multiple,omitempty"`
	Fill                 int32    `protobuf:"varint,3,opt,name=fill,proto3" json:"fill,omitempty"`
	Judge                int32    `protobuf:"varint,4,opt,name=judge,proto3" json:"judge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemNum) Reset()         { *m = ProblemNum{} }
func (m *ProblemNum) String() string { return proto.CompactTextString(m) }
func (*ProblemNum) ProtoMessage()    {}
func (*ProblemNum) Descriptor() ([]byte, []int) {
	return fileDescriptor_4314db4f6a3e016f, []int{9}
}

func (m *ProblemNum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemNum.Unmarshal(m, b)
}
func (m *ProblemNum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemNum.Marshal(b, m, deterministic)
}
func (m *ProblemNum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemNum.Merge(m, src)
}
func (m *ProblemNum) XXX_Size() int {
	return xxx_messageInfo_ProblemNum.Size(m)
}
func (m *ProblemNum) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemNum.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemNum proto.InternalMessageInfo

func (m *ProblemNum) GetSingle() int32 {
	if m != nil {
		return m.Single
	}
	return 0
}

func (m *ProblemNum) GetMultiple() int32 {
	if m != nil {
		return m.Multiple
	}
	return 0
}

func (m *ProblemNum) GetFill() int32 {
	if m != nil {
		return m.Fill
	}
	return 0
}

func (m *ProblemNum) GetJudge() int32 {
	if m != nil {
		return m.Judge
	}
	return 0
}

type CreditRule struct {
	SingleScore          float64  `protobuf:"fixed64,1,opt,name=singleScore,proto3" json:"singleScore,omitempty"`
	MultipleScore        float64  `protobuf:"fixed64,2,opt,name=multipleScore,proto3" json:"multipleScore,omitempty"`
	FillScore            float64  `protobuf:"fixed64,3,opt,name=fillScore,proto3" json:"fillScore,omitempty"`
	JudgeScore           float64  `protobuf:"fixed64,4,opt,name=judgeScore,proto3" json:"judgeScore,omitempty"`
	PersonScore          float64  `protobuf:"fixed64,5,opt,name=personScore,proto3" json:"personScore,omitempty"`
	PersonScoreUp        float64  `protobuf:"fixed64,6,opt,name=personScoreUp,proto3" json:"personScoreUp,omitempty"`
	TeamScore            float64  `protobuf:"fixed64,7,opt,name=teamScore,proto3" json:"teamScore,omitempty"`
	TeamScoreUp          float64  `protobuf:"fixed64,8,opt,name=teamScoreUp,proto3" json:"teamScoreUp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditRule) Reset()         { *m = CreditRule{} }
func (m *CreditRule) String() string { return proto.CompactTextString(m) }
func (*CreditRule) ProtoMessage()    {}
func (*CreditRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_4314db4f6a3e016f, []int{10}
}

func (m *CreditRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditRule.Unmarshal(m, b)
}
func (m *CreditRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditRule.Marshal(b, m, deterministic)
}
func (m *CreditRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditRule.Merge(m, src)
}
func (m *CreditRule) XXX_Size() int {
	return xxx_messageInfo_CreditRule.Size(m)
}
func (m *CreditRule) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditRule.DiscardUnknown(m)
}

var xxx_messageInfo_CreditRule proto.InternalMessageInfo

func (m *CreditRule) GetSingleScore() float64 {
	if m != nil {
		return m.SingleScore
	}
	return 0
}

func (m *CreditRule) GetMultipleScore() float64 {
	if m != nil {
		return m.MultipleScore
	}
	return 0
}

func (m *CreditRule) GetFillScore() float64 {
	if m != nil {
		return m.FillScore
	}
	return 0
}

func (m *CreditRule) GetJudgeScore() float64 {
	if m != nil {
		return m.JudgeScore
	}
	return 0
}

func (m *CreditRule) GetPersonScore() float64 {
	if m != nil {
		return m.PersonScore
	}
	return 0
}

func (m *CreditRule) GetPersonScoreUp() float64 {
	if m != nil {
		return m.PersonScoreUp
	}
	return 0
}

func (m *CreditRule) GetTeamScore() float64 {
	if m != nil {
		return m.TeamScore
	}
	return 0
}

func (m *CreditRule) GetTeamScoreUp() float64 {
	if m != nil {
		return m.TeamScoreUp
	}
	return 0
}

func init() {
	proto.RegisterType((*EventIdReq)(nil), "EventIdReq")
	proto.RegisterType((*EventDetailMesssage)(nil), "EventDetailMesssage")
	proto.RegisterType((*EventShowMesssage)(nil), "EventShowMesssage")
	proto.RegisterType((*GetEventListReq)(nil), "GetEventListReq")
	proto.RegisterType((*EventMesssage)(nil), "EventMesssage")
	proto.RegisterType((*EventListRsp)(nil), "EventListRsp")
	proto.RegisterType((*AddEventReq)(nil), "AddEventReq")
	proto.RegisterType((*AddEventRsp)(nil), "AddEventRsp")
	proto.RegisterType((*EventTime)(nil), "EventTime")
	proto.RegisterType((*ProblemNum)(nil), "ProblemNum")
	proto.RegisterType((*CreditRule)(nil), "CreditRule")
}

func init() { proto.RegisterFile("eventManage.proto", fileDescriptor_4314db4f6a3e016f) }

var fileDescriptor_4314db4f6a3e016f = []byte{
	// 832 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcb, 0x6e, 0xf3, 0x44,
	0x14, 0x8e, 0xed, 0x38, 0x97, 0xe3, 0xa4, 0x7f, 0x33, 0x7f, 0x55, 0x46, 0x11, 0xaa, 0x22, 0x0b,
	0x55, 0x11, 0x20, 0x2f, 0x0a, 0x62, 0x85, 0x90, 0x7a, 0x53, 0x55, 0x89, 0x16, 0xe4, 0xb6, 0x2b,
	0x56, 0x6e, 0x3c, 0x09, 0xae, 0x7c, 0xc3, 0x9e, 0x50, 0x65, 0xcd, 0x23, 0xb0, 0xe3, 0x1d, 0x58,
	0xf3, 0x78, 0xa0, 0x39, 0xe3, 0xd8, 0x63, 0xe7, 0xd2, 0x2e, 0x80, 0x9d, 0xbf, 0xef, 0x9c, 0xb9,
	0x9c, 0xcf, 0xe7, 0x32, 0x30, 0x62, 0xbf, 0xb2, 0x98, 0xdf, 0x79, 0xb1, 0xb7, 0x60, 0x4e, 0x9a,
	0x25, 0x3c, 0xb1, 0x4f, 0x01, 0xae, 0x05, 0x79, 0xeb, 0xbb, 0xec, 0x17, 0x42, 0xa1, 0xcb, 0x24,
	0xa2, 0xda, 0x44, 0x9b, 0x1a, 0xee, 0x1a, 0xda, 0xbf, 0x99, 0xf0, 0x11, 0x1d, 0xaf, 0x18, 0xf7,
	0x82, 0xf0, 0x8e, 0xe5, 0x79, 0xee, 0x2d, 0xd8, 0xee, 0x15, 0xe4, 0x04, 0x00, 0x3f, 0x1f, 0x03,
	0x1e, 0x32, 0xaa, 0x4f, 0xb4, 0x69, 0xdf, 0x55, 0x18, 0xf2, 0x29, 0xf4, 0x25, 0x5a, 0xa5, 0x8c,
	0x1a, 0x68, 0xae, 0x08, 0xf2, 0x39, 0x1c, 0x32, 0x79, 0x5c, 0x3e, 0xcb, 0x82, 0x94, 0x07, 0x49,
	0x4c, 0xdb, 0xe8, 0xb4, 0xc1, 0x93, 0x53, 0x38, 0x48, 0xbd, 0x8c, 0x07, 0xb3, 0x20, 0xf5, 0x62,
	0x7e, 0xbf, 0x8c, 0xa8, 0x39, 0xd1, 0xa6, 0xa6, 0xdb, 0x60, 0xc5, 0x89, 0x39, 0xf7, 0x32, 0xfe,
	0x18, 0x44, 0x8c, 0x76, 0xe4, 0x89, 0x25, 0x81, 0x91, 0xc4, 0x3e, 0xda, 0xba, 0x68, 0x5b, 0x43,
	0xb1, 0xce, 0x8b, 0xf3, 0x57, 0x96, 0x5d, 0x79, 0x2b, 0xda, 0x93, 0xeb, 0x4a, 0x82, 0x4c, 0xc0,
	0xca, 0x83, 0x78, 0x11, 0xb2, 0x87, 0x59, 0x92, 0x31, 0xda, 0x9f, 0x68, 0x53, 0xcd, 0x55, 0x29,
	0xb1, 0x7e, 0x1e, 0x84, 0xa1, 0xb4, 0x03, 0xda, 0x2b, 0x42, 0xe8, 0xf4, 0xb2, 0xf4, 0x17, 0xc5,
	0x72, 0x0b, 0xcd, 0x0a, 0x43, 0x3e, 0x83, 0x61, 0xb4, 0x0c, 0x79, 0x90, 0xae, 0x4f, 0x18, 0xa0,
	0x4b, 0x9d, 0x14, 0x67, 0x70, 0xe6, 0x45, 0xd2, 0x63, 0x28, 0xcf, 0x28, 0x09, 0x71, 0xc7, 0x12,
	0x3c, 0xa5, 0xf4, 0x40, 0xde, 0x51, 0xa1, 0x84, 0x47, 0xca, 0xb2, 0x3c, 0x89, 0xe5, 0x0e, 0x1f,
	0xa4, 0x87, 0x42, 0x89, 0x7b, 0x28, 0xf0, 0x29, 0xa5, 0x87, 0xf2, 0x1e, 0x35, 0x92, 0x1c, 0x43,
	0x47, 0x86, 0x4e, 0x47, 0x28, 0x54, 0x81, 0x08, 0x81, 0xb6, 0x08, 0x99, 0x12, 0x64, 0xf1, 0x9b,
	0x1c, 0x81, 0x89, 0x71, 0xd2, 0x8f, 0x48, 0x4a, 0x40, 0xc6, 0xd0, 0x5b, 0x87, 0x46, 0x8f, 0xd0,
	0x50, 0x62, 0xfb, 0x2f, 0x1d, 0x46, 0x98, 0x85, 0x0f, 0x3f, 0x27, 0xaf, 0xff, 0x42, 0x0e, 0x6e,
	0xcb, 0x32, 0xe3, 0xdd, 0x59, 0xd6, 0x7e, 0x3b, 0xcb, 0xcc, 0x3d, 0x59, 0xd6, 0xa9, 0x67, 0x59,
	0xa5, 0x5c, 0x77, 0xab, 0x72, 0xbd, 0x6d, 0xca, 0xf5, 0x77, 0x29, 0x07, 0x0d, 0xe5, 0x7e, 0x82,
	0x0f, 0x37, 0x8c, 0xa3, 0x76, 0xdf, 0x07, 0x39, 0x17, 0xc5, 0x7e, 0x0c, 0x9d, 0x64, 0x3e, 0xcf,
	0x19, 0x47, 0xd5, 0x4c, 0xb7, 0x40, 0x62, 0xf3, 0x30, 0x88, 0x02, 0x8e, 0x7a, 0x99, 0xae, 0x04,
	0xb8, 0x39, 0x36, 0x8e, 0x5b, 0x1f, 0x25, 0x32, 0xdc, 0x12, 0xdb, 0xbf, 0x6b, 0x30, 0xc4, 0xad,
	0xff, 0xe7, 0x5f, 0x52, 0x6b, 0x21, 0xed, 0x46, 0x0b, 0xb1, 0xbf, 0x85, 0x41, 0x15, 0x6f, 0x9e,
	0x92, 0x2f, 0x0b, 0x6f, 0x81, 0xa9, 0x36, 0x31, 0xa6, 0xd6, 0xd9, 0x81, 0x53, 0xbb, 0xb6, 0x5b,
	0x39, 0xd8, 0x7f, 0xeb, 0x60, 0x9d, 0xfb, 0x3e, 0xda, 0x85, 0x5a, 0x6a, 0xfc, 0x5a, 0x3d, 0xfe,
	0xff, 0x26, 0x26, 0x91, 0x22, 0xb5, 0x98, 0x44, 0x92, 0x8c, 0xa1, 0x87, 0x60, 0xdd, 0xe4, 0xfa,
	0x6e, 0x89, 0xeb, 0x6a, 0x74, 0x9a, 0x0d, 0x55, 0x94, 0x6f, 0x96, 0x3c, 0x87, 0x2c, 0x72, 0xbd,
	0xd8, 0x4f, 0x22, 0xcc, 0xb2, 0x9e, 0x5b, 0x27, 0x89, 0x0d, 0x83, 0x04, 0xef, 0x51, 0x38, 0xf5,
	0xd0, 0xa9, 0xc6, 0x89, 0x68, 0x65, 0xf7, 0xc3, 0x2b, 0xca, 0x0c, 0x54, 0x18, 0x61, 0x9f, 0x65,
	0xcc, 0x0f, 0xb8, 0xbb, 0x2c, 0x13, 0x51, 0x61, 0xb6, 0x14, 0x92, 0xb5, 0xad, 0x90, 0xec, 0x73,
	0xe5, 0x07, 0xe4, 0xa9, 0x48, 0xa9, 0x88, 0xe1, 0x6f, 0x42, 0xfd, 0xfb, 0xee, 0x1a, 0xaa, 0xc9,
	0xa6, 0xd7, 0xa7, 0x96, 0x07, 0xfd, 0xeb, 0x52, 0xbb, 0x5a, 0x61, 0x6a, 0x7b, 0x0a, 0x53, 0xdf,
	0xd3, 0xfe, 0x8d, 0x46, 0xfb, 0xb7, 0x5f, 0x00, 0x7e, 0x94, 0x12, 0x8a, 0x7f, 0x50, 0x15, 0x71,
	0x51, 0x53, 0x45, 0x11, 0xab, 0xa5, 0x29, 0xcb, 0xaa, 0xc4, 0x65, 0x81, 0x1b, 0xc8, 0x37, 0x0a,
	0x5c, 0xf6, 0x18, 0x09, 0xec, 0x3f, 0x74, 0x80, 0xcb, 0x4a, 0xc8, 0xc6, 0xe4, 0xd1, 0x36, 0x27,
	0xcf, 0xc6, 0xec, 0xd0, 0x77, 0xcc, 0x8e, 0x6a, 0x3e, 0x19, 0xfb, 0xe7, 0x53, 0x7b, 0x63, 0x3e,
	0x35, 0x26, 0x87, 0xf9, 0x8e, 0xc9, 0xd1, 0xd9, 0x36, 0x39, 0x6a, 0x13, 0xac, 0xfb, 0xc6, 0x04,
	0xeb, 0x6d, 0x4c, 0xb0, 0xb3, 0x3f, 0x75, 0xb0, 0xae, 0xab, 0xf7, 0x0d, 0xb9, 0x84, 0x13, 0xb5,
	0xe3, 0x5d, 0xac, 0xee, 0x8a, 0x72, 0x3d, 0x8f, 0xfd, 0x1f, 0xe6, 0xf3, 0x9c, 0x93, 0x43, 0xa7,
	0xd1, 0x12, 0xc7, 0x43, 0x47, 0xed, 0x18, 0x76, 0x8b, 0x7c, 0x81, 0x39, 0x78, 0xcf, 0x5e, 0x91,
	0x27, 0x03, 0x47, 0x69, 0x09, 0x63, 0x05, 0xa1, 0xf3, 0x37, 0x30, 0x5a, 0x6f, 0x78, 0xb1, 0x2a,
	0x5e, 0x55, 0xc4, 0x72, 0xaa, 0xf7, 0xd5, 0x98, 0x38, 0x1b, 0xd3, 0xcb, 0x6e, 0x91, 0xef, 0xe0,
	0x93, 0x1b, 0x56, 0x3c, 0xac, 0xf6, 0xad, 0x3e, 0x72, 0xb6, 0xbc, 0xc0, 0xec, 0x16, 0xf9, 0x1a,
	0x8e, 0x6f, 0x18, 0xaf, 0x12, 0x63, 0xc7, 0x72, 0xcb, 0xa9, 0x5c, 0xec, 0xd6, 0x73, 0x07, 0x1f,
	0x80, 0x5f, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x33, 0x70, 0xd5, 0x15, 0x0a, 0x00, 0x00,
}
