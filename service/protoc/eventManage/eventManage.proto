syntax = "proto3";

service EventManage {
    rpc GetEventListByManageIdAndOffst(GetEventListReq) returns (EventListRsp) {}
    rpc AddNewEvent(AddEventReq) returns (AddEventRsp) {}
    rpc GetEventByEventId(EventIdReq) returns (EventShowMesssage) {}
    rpc GetDetailEventByEventId(EventIdReq) returns (EventDetailMesssage) {}
    rpc GetCreditRuleByEventId(EventIdReq) returns (CreditRule) {}
    rpc GetProblemNumByEventId(EventIdReq) returns (ProblemNum) {}
}

message EventIdReq {
    int64 eventId = 1;
}

message EventDetailMesssage {
    int64 eventId=1;
    string eventTitle=2;
    string eventType=3;
    string eventDescription=4;
    int32 participantNum=5;
    string startTime = 6;
    string endTime = 7;
    string answerDay = 8;
    double singleScore = 9;
    double fillScore = 10;
    double judgeScore = 11;
    double multipleScore = 12;
    double teamScore = 13;
    double teamScoreUp = 14;
    double personScore = 15;
    double personScoreUp = 16;
    string single = 17;
    string fill = 18;
    string judge = 19;
    string multiple = 20;
}

message EventShowMesssage {
    int64 eventId=1;
    string eventTitle=2;
    string eventDescription=3;
    int32 participantNum=4;
    string startTime = 5;
    string endTime = 6;
    string single = 7;
    string fill = 8;
    string judge = 9;
    string multiple = 10;
    double answerTime = 11;
}

message GetEventListReq {
    int32 offset = 1;
    int32 limit = 2;
    int64 manageId = 3;
}

message EventMesssage {
    int64 eventId = 1;
    string eventTitle = 2;
    string eventDescription = 3;
    string eventType = 4;
}

message EventListRsp {
    repeated EventMesssage eventList= 1;
}

message AddEventReq {
    int64 manageId=1;
    string eventTitle=2;
    string eventDescription=3;
    string eventTime=4;
    string eventNum=5;
    string eventType=6;
    bool problemRandom=7;
    bool optionRandom=8;
    string answerTime=9;
    string creditRule=10;
    int32 participantNum=11;
}

message AddEventRsp {
    string message = 1;
    int64 eventId = 2;
}

message EventTime {
    string startTime = 1;
    string endTime = 2;
    string answerDay = 3;
}

message ProblemNum {
    int32 single = 1;
    int32 multiple = 2;
    int32 fill = 3;
    int32 judge = 4;
}

message CreditRule {
    double singleScore = 1;
    double multipleScore = 2;
    double fillScore = 3;
    double judgeScore = 4;
    double personScore = 5;
    double personScoreUp = 6;
    double teamScore = 7;
    double teamScoreUp = 8;
}