// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/protoc/problemManage/problemManage.proto

package problemManage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetEndProblemIdReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEndProblemIdReq) Reset()         { *m = GetEndProblemIdReq{} }
func (m *GetEndProblemIdReq) String() string { return proto.CompactTextString(m) }
func (*GetEndProblemIdReq) ProtoMessage()    {}
func (*GetEndProblemIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e2a91ebb021f645, []int{0}
}

func (m *GetEndProblemIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEndProblemIdReq.Unmarshal(m, b)
}
func (m *GetEndProblemIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEndProblemIdReq.Marshal(b, m, deterministic)
}
func (m *GetEndProblemIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEndProblemIdReq.Merge(m, src)
}
func (m *GetEndProblemIdReq) XXX_Size() int {
	return xxx_messageInfo_GetEndProblemIdReq.Size(m)
}
func (m *GetEndProblemIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEndProblemIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetEndProblemIdReq proto.InternalMessageInfo

type GetEndProblemIdRsp struct {
	EndId                int64    `protobuf:"varint,1,opt,name=endId,proto3" json:"endId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEndProblemIdRsp) Reset()         { *m = GetEndProblemIdRsp{} }
func (m *GetEndProblemIdRsp) String() string { return proto.CompactTextString(m) }
func (*GetEndProblemIdRsp) ProtoMessage()    {}
func (*GetEndProblemIdRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e2a91ebb021f645, []int{1}
}

func (m *GetEndProblemIdRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEndProblemIdRsp.Unmarshal(m, b)
}
func (m *GetEndProblemIdRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEndProblemIdRsp.Marshal(b, m, deterministic)
}
func (m *GetEndProblemIdRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEndProblemIdRsp.Merge(m, src)
}
func (m *GetEndProblemIdRsp) XXX_Size() int {
	return xxx_messageInfo_GetEndProblemIdRsp.Size(m)
}
func (m *GetEndProblemIdRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEndProblemIdRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetEndProblemIdRsp proto.InternalMessageInfo

func (m *GetEndProblemIdRsp) GetEndId() int64 {
	if m != nil {
		return m.EndId
	}
	return 0
}

type GetProblemListReq struct {
	Offset               int32    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	ManageId             int64    `protobuf:"varint,3,opt,name=manageId,proto3" json:"manageId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProblemListReq) Reset()         { *m = GetProblemListReq{} }
func (m *GetProblemListReq) String() string { return proto.CompactTextString(m) }
func (*GetProblemListReq) ProtoMessage()    {}
func (*GetProblemListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e2a91ebb021f645, []int{2}
}

func (m *GetProblemListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProblemListReq.Unmarshal(m, b)
}
func (m *GetProblemListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProblemListReq.Marshal(b, m, deterministic)
}
func (m *GetProblemListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProblemListReq.Merge(m, src)
}
func (m *GetProblemListReq) XXX_Size() int {
	return xxx_messageInfo_GetProblemListReq.Size(m)
}
func (m *GetProblemListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProblemListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetProblemListReq proto.InternalMessageInfo

func (m *GetProblemListReq) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetProblemListReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetProblemListReq) GetManageId() int64 {
	if m != nil {
		return m.ManageId
	}
	return 0
}

type ProblemMesssage struct {
	ProblemId            int64    `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
	ProblemContent       string   `protobuf:"bytes,2,opt,name=problemContent,proto3" json:"problemContent,omitempty"`
	ProblemOption        string   `protobuf:"bytes,3,opt,name=problemOption,proto3" json:"problemOption,omitempty"`
	ProblemAnswer        string   `protobuf:"bytes,4,opt,name=problemAnswer,proto3" json:"problemAnswer,omitempty"`
	ProblemClass         string   `protobuf:"bytes,5,opt,name=problemClass,proto3" json:"problemClass,omitempty"`
	ProblemType          int32    `protobuf:"varint,6,opt,name=problemType,proto3" json:"problemType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemMesssage) Reset()         { *m = ProblemMesssage{} }
func (m *ProblemMesssage) String() string { return proto.CompactTextString(m) }
func (*ProblemMesssage) ProtoMessage()    {}
func (*ProblemMesssage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e2a91ebb021f645, []int{3}
}

func (m *ProblemMesssage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemMesssage.Unmarshal(m, b)
}
func (m *ProblemMesssage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemMesssage.Marshal(b, m, deterministic)
}
func (m *ProblemMesssage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemMesssage.Merge(m, src)
}
func (m *ProblemMesssage) XXX_Size() int {
	return xxx_messageInfo_ProblemMesssage.Size(m)
}
func (m *ProblemMesssage) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemMesssage.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemMesssage proto.InternalMessageInfo

func (m *ProblemMesssage) GetProblemId() int64 {
	if m != nil {
		return m.ProblemId
	}
	return 0
}

func (m *ProblemMesssage) GetProblemContent() string {
	if m != nil {
		return m.ProblemContent
	}
	return ""
}

func (m *ProblemMesssage) GetProblemOption() string {
	if m != nil {
		return m.ProblemOption
	}
	return ""
}

func (m *ProblemMesssage) GetProblemAnswer() string {
	if m != nil {
		return m.ProblemAnswer
	}
	return ""
}

func (m *ProblemMesssage) GetProblemClass() string {
	if m != nil {
		return m.ProblemClass
	}
	return ""
}

func (m *ProblemMesssage) GetProblemType() int32 {
	if m != nil {
		return m.ProblemType
	}
	return 0
}

type ProblemListRsp struct {
	ProblemList          []*ProblemMesssage `protobuf:"bytes,1,rep,name=problemList,proto3" json:"problemList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ProblemListRsp) Reset()         { *m = ProblemListRsp{} }
func (m *ProblemListRsp) String() string { return proto.CompactTextString(m) }
func (*ProblemListRsp) ProtoMessage()    {}
func (*ProblemListRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e2a91ebb021f645, []int{4}
}

func (m *ProblemListRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemListRsp.Unmarshal(m, b)
}
func (m *ProblemListRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemListRsp.Marshal(b, m, deterministic)
}
func (m *ProblemListRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemListRsp.Merge(m, src)
}
func (m *ProblemListRsp) XXX_Size() int {
	return xxx_messageInfo_ProblemListRsp.Size(m)
}
func (m *ProblemListRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemListRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemListRsp proto.InternalMessageInfo

func (m *ProblemListRsp) GetProblemList() []*ProblemMesssage {
	if m != nil {
		return m.ProblemList
	}
	return nil
}

type GetNewProblemByTypeReq struct {
	FirstProblemId       int64    `protobuf:"varint,1,opt,name=firstProblemId,proto3" json:"firstProblemId,omitempty"`
	ProblemType          int32    `protobuf:"varint,2,opt,name=problemType,proto3" json:"problemType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNewProblemByTypeReq) Reset()         { *m = GetNewProblemByTypeReq{} }
func (m *GetNewProblemByTypeReq) String() string { return proto.CompactTextString(m) }
func (*GetNewProblemByTypeReq) ProtoMessage()    {}
func (*GetNewProblemByTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e2a91ebb021f645, []int{5}
}

func (m *GetNewProblemByTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewProblemByTypeReq.Unmarshal(m, b)
}
func (m *GetNewProblemByTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewProblemByTypeReq.Marshal(b, m, deterministic)
}
func (m *GetNewProblemByTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewProblemByTypeReq.Merge(m, src)
}
func (m *GetNewProblemByTypeReq) XXX_Size() int {
	return xxx_messageInfo_GetNewProblemByTypeReq.Size(m)
}
func (m *GetNewProblemByTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewProblemByTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewProblemByTypeReq proto.InternalMessageInfo

func (m *GetNewProblemByTypeReq) GetFirstProblemId() int64 {
	if m != nil {
		return m.FirstProblemId
	}
	return 0
}

func (m *GetNewProblemByTypeReq) GetProblemType() int32 {
	if m != nil {
		return m.ProblemType
	}
	return 0
}

type AddProblemRsp struct {
	ProblemId            int64    `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddProblemRsp) Reset()         { *m = AddProblemRsp{} }
func (m *AddProblemRsp) String() string { return proto.CompactTextString(m) }
func (*AddProblemRsp) ProtoMessage()    {}
func (*AddProblemRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e2a91ebb021f645, []int{6}
}

func (m *AddProblemRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProblemRsp.Unmarshal(m, b)
}
func (m *AddProblemRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProblemRsp.Marshal(b, m, deterministic)
}
func (m *AddProblemRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProblemRsp.Merge(m, src)
}
func (m *AddProblemRsp) XXX_Size() int {
	return xxx_messageInfo_AddProblemRsp.Size(m)
}
func (m *AddProblemRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProblemRsp.DiscardUnknown(m)
}

var xxx_messageInfo_AddProblemRsp proto.InternalMessageInfo

func (m *AddProblemRsp) GetProblemId() int64 {
	if m != nil {
		return m.ProblemId
	}
	return 0
}

func (m *AddProblemRsp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*GetEndProblemIdReq)(nil), "GetEndProblemIdReq")
	proto.RegisterType((*GetEndProblemIdRsp)(nil), "GetEndProblemIdRsp")
	proto.RegisterType((*GetProblemListReq)(nil), "GetProblemListReq")
	proto.RegisterType((*ProblemMesssage)(nil), "ProblemMesssage")
	proto.RegisterType((*ProblemListRsp)(nil), "ProblemListRsp")
	proto.RegisterType((*GetNewProblemByTypeReq)(nil), "GetNewProblemByTypeReq")
	proto.RegisterType((*AddProblemRsp)(nil), "AddProblemRsp")
}

func init() {
	proto.RegisterFile("service/protoc/problemManage/problemManage.proto", fileDescriptor_3e2a91ebb021f645)
}

var fileDescriptor_3e2a91ebb021f645 = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x4d, 0x6b, 0xdb, 0x40,
	0x10, 0x8d, 0xec, 0xda, 0xad, 0x27, 0xb5, 0xdc, 0x4e, 0x42, 0xba, 0x88, 0x16, 0xcc, 0x52, 0x42,
	0xe8, 0x41, 0x0d, 0xee, 0xb9, 0x07, 0xa5, 0x1f, 0xc2, 0x90, 0x34, 0x46, 0xf4, 0xda, 0x83, 0x1c,
	0x8d, 0x82, 0xc0, 0x5a, 0x29, 0xda, 0xa5, 0xc6, 0xbf, 0xa1, 0xbf, 0xb4, 0xff, 0xa2, 0x68, 0xb5,
	0xb2, 0xf5, 0x61, 0x7a, 0x32, 0xef, 0xf9, 0xed, 0xcc, 0xd3, 0x9b, 0x19, 0xb8, 0x96, 0x54, 0xfc,
	0x4e, 0x1e, 0xe8, 0x63, 0x5e, 0x64, 0x2a, 0x7b, 0x28, 0x7f, 0xd6, 0x1b, 0x4a, 0xef, 0x42, 0x11,
	0x3e, 0x52, 0x1b, 0xb9, 0x5a, 0xc2, 0xcf, 0x01, 0x7d, 0x52, 0xdf, 0x44, 0xb4, 0xaa, 0xfe, 0x5c,
	0x46, 0x01, 0x3d, 0xf1, 0x0f, 0x7d, 0x56, 0xe6, 0x78, 0x0e, 0x23, 0x12, 0xd1, 0x32, 0x62, 0xd6,
	0xdc, 0xba, 0x1a, 0x06, 0x15, 0xe0, 0xbf, 0xe0, 0xb5, 0x4f, 0xca, 0x08, 0x6f, 0x13, 0xa9, 0x02,
	0x7a, 0xc2, 0x0b, 0x18, 0x67, 0x71, 0x2c, 0x49, 0x69, 0xed, 0x28, 0x30, 0xa8, 0x2c, 0xb1, 0x49,
	0xd2, 0x44, 0xb1, 0x81, 0xa6, 0x2b, 0x80, 0x0e, 0xbc, 0x48, 0xb5, 0xa9, 0x65, 0xc4, 0x86, 0xba,
	0xf6, 0x1e, 0xf3, 0xbf, 0x16, 0xcc, 0x4c, 0xf1, 0x3b, 0x92, 0x52, 0x86, 0x8f, 0x84, 0x6f, 0x61,
	0x92, 0xd7, 0xc6, 0x8c, 0x99, 0x03, 0x81, 0x97, 0x60, 0x1b, 0xf0, 0x25, 0x13, 0x8a, 0x44, 0xd5,
	0x6c, 0x12, 0x74, 0x58, 0x7c, 0x0f, 0x53, 0xc3, 0xdc, 0xe7, 0x2a, 0xc9, 0x84, 0x6e, 0x3d, 0x09,
	0xda, 0x64, 0x43, 0xe5, 0x09, 0xb9, 0xa5, 0x82, 0x3d, 0x6b, 0xa9, 0x2a, 0x12, 0x39, 0xbc, 0xac,
	0xab, 0x6f, 0x42, 0x29, 0xd9, 0x48, 0x8b, 0x5a, 0x1c, 0xce, 0xe1, 0xd4, 0xe0, 0x9f, 0xbb, 0x9c,
	0xd8, 0x58, 0x27, 0xd0, 0xa4, 0xf8, 0x57, 0xb0, 0x9b, 0x39, 0xca, 0x1c, 0x17, 0xfb, 0x37, 0x25,
	0xc3, 0xac, 0xf9, 0xf0, 0xea, 0x74, 0xf1, 0xca, 0xed, 0x04, 0x12, 0x34, 0x45, 0x7c, 0x0d, 0x17,
	0x3e, 0xa9, 0x1f, 0xb4, 0x35, 0xaa, 0x9b, 0x5d, 0x59, 0xbc, 0x9c, 0xca, 0x25, 0xd8, 0x71, 0x52,
	0x48, 0xb5, 0xea, 0x84, 0xd7, 0x61, 0xbb, 0x4e, 0x07, 0x7d, 0xa7, 0x3e, 0x4c, 0xbd, 0xa8, 0xde,
	0x8e, 0xd2, 0xe8, 0xff, 0x47, 0xc2, 0xe0, 0x79, 0x4a, 0xda, 0xaa, 0x99, 0x45, 0x0d, 0x17, 0x7f,
	0x06, 0x30, 0x5d, 0x35, 0xf7, 0x12, 0xbf, 0xc3, 0xbb, 0xf6, 0x3e, 0xdd, 0xec, 0xee, 0xe3, 0x58,
	0x2a, 0x4f, 0x44, 0xb7, 0x7a, 0x5b, 0xd0, 0xed, 0xed, 0x9b, 0x33, 0x73, 0xdb, 0xc1, 0xf1, 0x13,
	0xbc, 0x06, 0x38, 0x58, 0xc4, 0x5e, 0x66, 0x8e, 0xed, 0xb6, 0xbe, 0x80, 0x9f, 0xa0, 0x07, 0x67,
	0x47, 0x82, 0xc3, 0x37, 0xee, 0xf1, 0x38, 0x8f, 0x35, 0xfd, 0x0c, 0xb3, 0xce, 0xe1, 0xe0, 0x99,
	0xdb, 0x3f, 0x30, 0xa7, 0x4f, 0x96, 0xcf, 0xd7, 0x63, 0x7d, 0x94, 0x9f, 0xfe, 0x05, 0x00, 0x00,
	0xff, 0xff, 0x57, 0x28, 0x59, 0x90, 0xc8, 0x03, 0x00, 0x00,
}
